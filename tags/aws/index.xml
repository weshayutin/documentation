<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on Managed OpenShift Black Belt - Unofficial Documentation</title><link>https://mobb.ninja/tags/aws/</link><description>Recent content in AWS on Managed OpenShift Black Belt - Unofficial Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mobb.ninja/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>ROSA Quickstart</title><link>https://mobb.ninja/docs/quickstart-rosa/</link><pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/quickstart-rosa/</guid><description>A Quickstart guide to deploying a Red Hat OpenShift cluster on AWS.
Video Walkthrough Quick Introduction to ROSA by Charlotte Fung on AWS YouTube channel If you prefer a more visual medium, you can watch Steve Mirman walk through this quickstart on YouTube .
Prerequisites AWS an AWS account with the AWS ROSA Prerequisites met.
MacOS
See AWS Docs for alternative install options.
Install AWS CLI using the macOS command line</description></item><item><title>Creating ROSA Components with GitOps</title><link>https://mobb.ninja/docs/rosa/rosa-gitops/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/rosa-gitops/</guid><description>Many organizations want to use GitOps methodologies as a main part of their operational practices. Often times, this includes infrastructure as well. The advantage to this practice is that anything controlled in this manner can exist as infrastructure-as-code, by way of Kubernetes YAML definitions, in a centralized repository backed by Git. Additionally, all processes and procedures become a part of the Git workflow with a standardized Continuous Deployment pipeline controlling the outcome.</description></item><item><title>Using AWS Secrets Manager CSI on Red Hat OpenShift on AWS with STS</title><link>https://mobb.ninja/docs/rosa/aws-secrets-manager-csi/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-secrets-manager-csi/</guid><description>The AWS Secrets and Configuration Provider (ASCP) provides a way to expose AWS Secrets as Kubernetes storage volumes. With the ASCP, you can store and manage your secrets in Secrets Manager and then retrieve them through your workloads running on ROSA or OSD.
This is made even easier and more secure through the use of AWS STS and Kubernetes PodIdentity.
Prerequisites A ROSA cluster deployed with STS Helm 3 aws CLI oc CLI jq Preparing Environment Validate that your cluster has STS</description></item><item><title>Enabling the AWS EFS CSI Driver Operator on ROSA</title><link>https://mobb.ninja/docs/rosa/aws-efs/</link><pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-efs/</guid><description>The Amazon Web Services Elastic File System (AWS EFS) is a Network File System (NFS) that can be provisioned on Red Hat OpenShift Service on AWS clusters. With the release of OpenShift 4.10 the EFS CSI Driver is now GA and available.
This is a guide to quickly enable the EFS Operator on ROSA to a Red Hat OpenShift on AWS (ROSA) cluster with STS enabled.
Note: The official supported installation instructions for the EFS CSI Driver on ROSA are available here .</description></item><item><title>ROSA with Nvidia GPU Workloads</title><link>https://mobb.ninja/docs/rosa/gpu/</link><pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/gpu/</guid><description>ROSA guide to running Nvidia GPU workloads.
Prerequisites ROSA Cluster (4.10+) rosa cli #logged-in oc cli #logged-in-cluster-admin jq If you need to install a ROSA cluster, please read our ROSA Quickstart Guide . Please be sure you are installing or using an existing ROSA cluster that it is 4.10.x or higher.
As of OpenShift 4.10, it is no longer necessary to set up entitlements to use the nVidia Operator. This has greatly simplified the setup of the cluster for GPU workloads.</description></item><item><title>External DNS for ROSA Custom Domain</title><link>https://mobb.ninja/docs/rosa/external-dns/</link><pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/external-dns/</guid><description>Configuring the Custom Domain Operator requires a wildcard CNAME DNS record in your Route53 Hosted Zone. If you do not wish to use a wildcard record, you can use the External DNS Operator to create individual entries for routes.
This document will guide you through deploying and configuring the External DNS Operator with a Custom Domain in ROSA.
Important Note: The ExternalDNS Operator does not support STS yet and uses long lived IAM credentials.</description></item><item><title>AWS Load Balancer Operator On ROSA</title><link>https://mobb.ninja/docs/rosa/aws-load-balancer-operator/</link><pubDate>Tue, 03 Jan 2023 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-load-balancer-operator/</guid><description>AWS Load Balancer Controller is a controller to help manage Elastic Load Balancers for a Kubernetes cluster.
It satisfies Kubernetes Ingress resources by provisioning Application Load Balancers . It satisfies Kubernetes Service resources by provisioning Network Load Balancers . Compared with default AWS In Tree Provider, this controller is actively developed with advanced annotations for both ALB and NLB . Some advanced usecases are:
Using native kubernetes ingress with ALB Integrate ALB with WAF Specify NLB source IP ranges Specify NLB internal IP address AWS Load Balancer Operator is used to used to install, manage and configure an instance of aws-load-balancer-controller in a OpenShift cluster.</description></item><item><title>Configuring the Cluster Log Forwarder for CloudWatch Logs using Vector</title><link>https://mobb.ninja/docs/rosa/clf-cloudwatch-vector/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/clf-cloudwatch-vector/</guid><description>This guide shows how to deploy the Cluster Log Forwarder operator and configure it to use the Vector logging agent to forward logs to CloudWatch.
Vector will replaced FluentD as the default logging agent used by the Openshift Logging Operator when version 5.6 is released in Q4 2022. Version 5.5.3 of the operator can enable Vector by configuring it in the ClusterLogging resource.
Version 5.5.3 of the operator does not support passing an STS role to Vector, but version 5.</description></item><item><title>Dynamic Certificates for ROSA Custom Domain</title><link>https://mobb.ninja/docs/rosa/dynamic-certificates/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/dynamic-certificates/</guid><description>There may be situations when you prefer not to use wild-card certificates. This ROSA guide talks about certificate management with cert-manager and letsencrypt, to dynamically issue certificates to routes created on a custom domain that&amp;rsquo;s hosted on AWS Route53.
Prerequisites Set up environment Prepare AWS Account Set up cert-manager Create the Issuer and the Certficiate Configure Certificate Requestor Create the Certificate, which will later be used by the Custom Domain. Create the Custom Domain, which will be used to access your applications.</description></item><item><title>Configure a load balancer service to use a static public IP</title><link>https://mobb.ninja/docs/aro/static-ip-load-balancer/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/aro/static-ip-load-balancer/</guid><description>This guide demonstrates how to create and assign a static public IP address to an OpenShift service in Azure Red Hat OpenShift (ARO). By default, the public IP address assigned to an OpenShift service with a type of LoadBalancer created by an ARO cluster is only valid for the lifespan of that resource. If you delete the OpenShift service, the associated load balancer and IP address are also deleted. If you want to assign a specific IP address or retain an IP address for redeployed OpenShift services, you can create and use a static public IP address.</description></item><item><title>Verify Permissions for ROSA STS Deployment</title><link>https://mobb.ninja/docs/rosa/verify-permissions/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/verify-permissions/</guid><description>To proceed with the deployment of a ROSA cluster, an account must support the required roles and permissions. AWS Service Control Policies (SCPs) cannot block the API calls made by the installer or operator roles.
Details about the IAM resources required for an STS-enabled installation of ROSA can be found here: https://docs.openshift.com/rosa/rosa_architecture/rosa-sts-about-iam-resources.html This guide is validated for ROSA v4.11.X.
Prerequisites AWS CLI ROSA CLI v1.2.6 jq CLI AWS role with required permissions Verify ROSA Permissions To verify the permissions required for ROSA we can run the script below without ever creating any AWS resources.</description></item><item><title>STS OIDC in ROSA : How it works!</title><link>https://mobb.ninja/docs/rosa/sts-oidc-flow/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-oidc-flow/</guid><description>If you prefer a more visual medium, you can watch this video on YouTube .
This short video talks about how the STS OIDC flow work in ROSA (Red Hat OpenShift Service on AWS).</description></item><item><title>Security Reference Architecture for ROSA</title><link>https://mobb.ninja/docs/rosa/security-ra/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/security-ra/</guid><description>The Security Reference Architecture for ROSA is a set of guidelines for deploying Red Hat OpenShift on AWS (ROSA) clusters to support high-security production workloads that align with Red Hat and AWS best practices.
This overall architectural guidance compliments detailed, specific recommendations for AWS services and Red Hat OpenShift Container Platform.
The Security Reference Architecture (SRA) for ROSA is a living document and is updated periodically based on new feature releases, customer feedback and evolving security best practices.</description></item><item><title>Deploying OpenShift API for Data Protection on a ROSA cluster</title><link>https://mobb.ninja/docs/misc/oadp/rosa-sts/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/oadp/rosa-sts/</guid><description>Prerequisites An STS enabled ROSA cluster Getting Started Create the following environment variables
Change the cluster name to match your ROSA cluster and ensure you&amp;rsquo;re logged into the cluster as an Administrator. Ensure all fields are outputted correctly before moving on.
export CLUSTER_NAME=my-cluster export ROSA_CLUSTER_ID=$(rosa describe cluster -c ${CLUSTER_NAME} --output json | jq -r .id) export REGION=$(rosa describe cluster -c ${CLUSTER_NAME} --output json | jq -r .region.id) export OIDC_ENDPOINT=$(oc get authentication.</description></item><item><title>Custom AlertManager in ROSA 4.9.x</title><link>https://mobb.ninja/docs/rosa/custom-alertmanager-4.9/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/custom-alertmanager-4.9/</guid><description>This page is deprecated. In order to get the best experience for custom alerting in ROSA, please upgrade your cluster to to 4.12 and follow the newer documentation.
ROSA 4.9.x introduces a new way to provide custom AlertManager configuration to receive alerts from User Workload Management.
The OpenShift Administrator can use the Prometheus Operator to create a custom AlertManager resource and then use the AlertManagerConfig resource to configure User Workload Monitoring to use the custom AlertManager.</description></item><item><title>Configure ROSA/OSD to use custom TLS ciphers on the ingress controllers</title><link>https://mobb.ninja/docs/misc/tls-cipher-customization/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/tls-cipher-customization/</guid><description>This guide demonstrates how to properly patch the cluster ingress controllers, as well as ingress controllers created by the Custom Domain Operator. This functionality allows customers to modify the tlsSecurityProfile value on cluster ingress controllers. This guide will demonstrate how to apply a custom tlsSecurityProfile, a scoped service account (with the associated role and role binding), and a CronJob that the cipher changes are reapplied with 60 minutes (in the event that an ingress controller is recreated or modified).</description></item><item><title>Configuring the Cluster Log Forwarder for CloudWatch Logs and STS</title><link>https://mobb.ninja/docs/rosa/clf-cloudwatch-sts/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/clf-cloudwatch-sts/</guid><description>This guide shows how to deploy the Cluster Log Forwarder operator and configure it to use STS authentication to forward logs to CloudWatch.
Prerequisites A ROSA cluster (configured with STS) The jq cli command The aws cli command Environment Setup Configure the following environment variables
Change the cluster name to match your ROSA cluster and ensure you&amp;rsquo;re logged into the cluster as an Administrator. Ensure all fields are outputted correctly before moving on.</description></item><item><title>Using AWS Controllers for Kubernetes (ACK) on ROSA</title><link>https://mobb.ninja/docs/rosa/ack/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ack/</guid><description>AWS Controllers for Kubernetes (ACK) lets you define and use AWS service resources directly from Kubernetes. With ACK, you can take advantage of AWS-managed services for your Kubernetes applications without needing to define resources outside of the cluster or run services that provide supporting capabilities like databases or message queues within the cluster.
ROSA clusters have a set of the ACK controllers in Operator Hub which makes it relatively easy to get started and use it.</description></item><item><title>Create IAM user and Policy</title><link>https://mobb.ninja/docs/rosa/ecr-secret-operator/iam_user/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr-secret-operator/iam_user/</guid><description>Notes: These are sample commands. Please fill in your own resource parameters E.g. ARN
Create the policy cat &amp;lt;&amp;lt;EOF &amp;gt; /tmp/iam_policy.json { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: [ &amp;#34;ecr:GetAuthorizationToken&amp;#34; ], &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ] } EOF aws iam create-policy \ --policy-name ECRLoginPolicy \ --policy-document file:///tmp/iam_policy.json Create a user and access key and attach the policy aws iam create-user --user-name ecr-bot aws create-access-key --user-name ecr-bot aws iam attach-user-policy --policy-arn arn:aws:iam::[ACCOUNT_ID]:policy/ECRLoginPolicy --user-name ecr-bot Notes: Save access key id and key for later usage</description></item><item><title>Create STS Assume Role</title><link>https://mobb.ninja/docs/rosa/ecr-secret-operator/iam_assume_role/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr-secret-operator/iam_assume_role/</guid><description>About AWS STS and Assume Role Notes: These are sample commands. Please fill in your own resource parameters E.g. ARN
Prequisites
An STS Openshift Cluster Setup Environment Variables
export OIDC_PROVIDER=$(oc get authentication.config.openshift.io cluster -o json \ | jq -r .spec.serviceAccountIssuer| sed -e &amp;#34;s/^https:\/\///&amp;#34;) export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text) export REPOSITORY_NAME=test Create the policy
cat &amp;lt;&amp;lt;EOF &amp;gt; /tmp/iam_policy.json { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: [ &amp;#34;ecr:GetAuthorizationToken&amp;#34; ], &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ] } EOF aws iam create-policy \ --policy-name ECRLoginPolicy \ --policy-document file:///tmp/iam_policy.</description></item><item><title>ECR Secret Operator</title><link>https://mobb.ninja/docs/rosa/ecr-secret-operator/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr-secret-operator/</guid><description>Amazon Elastic Container Registry Private Registry Authentication provides a temporary authorization token valid only for 12 hours. This operator refreshes automatically the Amazon ECR authorization token before it expires, reducing the overhead in managing the authentication flow.
This operator contains two Custom Resources which direct the operator to generate/refresh Amazon ECR authorization token in a timely manner:
Image Pull Secret API Argo CD Repo Helm Chart Secret How to use this operator Prerequisites Create an ECR private repository Provide AWS Authentication to the operator.</description></item><item><title>Deploying ROSA in STS mode</title><link>https://mobb.ninja/docs/rosa/sts/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts/</guid><description>Tip The official documentation for installing a ROSA cluster in STS mode can be found here .
Quick Introduction by Ryan Niksch (AWS) and Shaozen Ding (Red Hat) on YouTube STS allows us to deploy ROSA without needing a ROSA admin account, instead it uses roles and policies with Amazon STS (secure token service) to gain access to the AWS resources needed to install and operate the cluster.
This is a summary of the official docs that can be used as a line by line install guide and later used as a basis for automation in your favorite automation tool .</description></item><item><title>Adding a Public Ingress endpoint to a ROSA Private-Link Cluster</title><link>https://mobb.ninja/docs/rosa/private-link/public-ingress/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/private-link/public-ingress/</guid><description>This is an example guide for creating a public ingress endpoint for a ROSA Private-Link cluster. Be aware of the security implications of creating a public subnet in your ROSA VPC this way.
Refer to the blog &amp;amp;ldquo;How to add public Ingress to a PrivateLink ROSA cluster&amp;amp;rdquo; , to expose applications to the internet by deploying in a PrivateLink Red Hat OpenShift Service on AWS (ROSA) cluster within a truly private Virtual Private Cloud (VPC) that doesn’t have an internet gateway attached to it.</description></item><item><title>Configuring a ROSA cluster to pull images from AWS Elastic Container Registry (ECR)</title><link>https://mobb.ninja/docs/rosa/ecr/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr/</guid><description>Prerequisites AWS CLI Openshift CLI 4.11+ Podman Desktop Background Quick Introduction by Ryan Niksch &amp;amp; Charlotte Fung on YouTube .
There are two options to use to authenticate wth Amazon ECR to pull images.
The traditional method is to create a pull secret for ecr.
Example:
oc create secret docker-registry ecr-pull-secret \ --docker-server=&amp;lt;registry id&amp;gt;.dkr.ecr.&amp;lt;region&amp;gt;.amazonaws.com \ --docker-username=AWS --docker-password=$(aws ecr get-login-password) \ --namespace=hello-world However Amazon ECR tokens expire every 12 hours which will mean you will need to re-authenticate every 12 hours either through scripting or do so manually.</description></item><item><title>Creating a ROSA cluster in STS mode with custom KMS key</title><link>https://mobb.ninja/docs/rosa/kms/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/kms/</guid><description>Tip Official Documentation ROSA STS with custom KMS key This guide will walk you through installing ROSA (Red Hat OpenShift Service on AWS) with a customer-provided KMS key that will be used to encrypt both the root volumes of nodes as well as persistent volumes for mounted EBS claims.
Prerequisites AWS CLI ROSA CLI v1.1.11 or higher OpenShift CLI - rosa download openshift-client Prepare AWS Account for ROSA Configure the AWS CLI by running the following command</description></item><item><title>ROSA - Federating Metrics to AWS Prometheus</title><link>https://mobb.ninja/docs/rosa/cluster-metrics-to-aws-prometheus/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/cluster-metrics-to-aws-prometheus/</guid><description>Federating Metrics from ROSA/OSD is a bit tricky as the cluster metrics require pulling from its /federated endpoint while the user workload metrics require using the prometheus remoteWrite configuration.
This guide will walk you through using the MOBB Helm Chart to deploy the necessary agents to federate the metrics into AWS Prometheus and then use Grafana to visualize those metrics.
As a bonus it will set up a CloudWatch datasource to view any metrics or logs you have in Cloud Watch.</description></item><item><title>Work Around to fix the issue with the logging-addon on ROSA STS Clusters</title><link>https://mobb.ninja/docs/rosa/sts-cluster-logging-addon/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-cluster-logging-addon/</guid><description>Currently, the logging-addon is not working on ROSA STS clusters. This is due to permissions missing from the Operator itself. This is a work around to provide credentials to the addon.
Note: Please see the official Red Hat KCS for more information.
Prerequisites An STS based ROSA Cluster Workaround Uninstall the logging-addon from the cluster
rosa uninstall addon -c &amp;lt;mycluster&amp;gt; cluster-logging-operator -y Create a IAM Trust Policy document
cat &amp;lt;&amp;lt; EOF &amp;gt; /tmp/trust-policy.</description></item><item><title>Configuring IDP for ROSA, OSD and ARO</title><link>https://mobb.ninja/docs/idp/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/idp/</guid><description>Red Hat OpenShift on AWS (ROSA) and OpenShift Dedicated (OSD) provide a simple way for the cluster administrator to configure one or more identity providers for their cluster[s] via the OpenShift Cluster Manager (OCM) , while Azure Red Hat OpenShift relies on the internal cluster authentication operator .
The identity providers available for use are:
GitHub GitLab Google LDAP OpenID HTPasswd Configuring Specific Identity Providers ARO GitLab Azure AD Azure AD with Group Claims Azure AD via CLI Azure AD with Red Hat SSO ROSA/OSD GitLab Azure AD Azure AD with Group Claims (ROSA Only) Configuring Group Synchronization Using Group Sync Operator with Azure Active Directory and ROSA/OSD Using Group Sync Operator with Okta and ROSA/OSD</description></item><item><title>Federating Metrics to a centralized Prometheus Cluster</title><link>https://mobb.ninja/docs/rosa/federated-metrics-prometheus/</link><pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/federated-metrics-prometheus/</guid><description>This document has been removed as it was written for older ROSA clusters which did not allow for custom Alert Manager configs as a way to provide a second Prometheus with a configurable Alert Manager.
If you want to configure custom Alerts, you can upgrade your cluster and follow the steps found at Custom Alerts in ROSA 4.11.x .
If you want to federate your metrics to a central location we recommend using one of the following:</description></item><item><title>Custom Alerts in ROSA 4.11.x</title><link>https://mobb.ninja/docs/rosa/custom-alertmanager/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/custom-alertmanager/</guid><description>Starting with OpenShift 4.11 it is possible to manage alerting rules for user-defined projects . Similarly, in ROSA clusters the OpenShift Administrator can enable a second AlertManager instance in the user workload monitoring namespace which can be used to create such alerts.
Note: Currently this is not a managed feature of ROSA. Such an implementation may get overwritten if the User Workload Monitoring functionality is toggled off and on using the OpenShift Cluster Manager (OCM).</description></item><item><title>Extending ROSA STS to include authentication with AWS Services</title><link>https://mobb.ninja/docs/rosa/using-sts-with-aws-services/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/using-sts-with-aws-services/</guid><description>In this example we will deploy the Amazon Ingress Controller that uses ALBs, and configure it to use STS authentication.
Deployment Configure STS Make sure your cluster has the pod identity webhook
kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io pod-identity-webhook Download the IAM Policy for the AWS Load Balancer Hooks
wget https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json Create AWS Role with inline policy
aws iam create-role \ --role-name AWSLoadBalancerController --query Policy.Arn --output text Create AWS Policy and Service Account</description></item><item><title>Integrating with AWS resources using Pod Identity</title><link>https://mobb.ninja/docs/rosa/sts-and-pod-identity/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-and-pod-identity/</guid><description>Prerequisites ROSA CLI AWS CLI ROSA Cluster with STS</description></item><item><title>Using the AWS Cloud Watch agent to publish metrics to CloudWatch in ROSA</title><link>https://mobb.ninja/docs/rosa/metrics-to-cloudwatch-agent/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/metrics-to-cloudwatch-agent/</guid><description>This document shows how you can use the AWS Cloud Watch agent to scrape Prometheus endpoints and publish metrics to CloudWatch in a Red Hat OpenShift Container Platform (ROSA) cluster.
It pulls from The AWS documentation for installing the CloudWatch agent to Kubernetes and collections and publishes metrics for the Kubernetes API Server and provides a simple Dashboard to view the results.
Currently the AWS Cloud Watch Agent does not support pulling all metrics from the Prometheus federated endpoint, but the hope is that when it does we can ship all Cluster and User Workload metrics to CloudWatch.</description></item><item><title>Creating a ROSA cluster with Private Link enabled (custom VPC) and STS</title><link>https://mobb.ninja/docs/rosa/sts-with-private-link/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-with-private-link/</guid><description>This is a combination of the private-link and sts setup documents to show the full picture
Prerequisites AWS CLI Rosa CLI v1.1.7 jq AWS Preparation If this is a brand new AWS account that has never had a AWS Load Balancer installed in it, you should run the following
aws iam create-service-linked-role --aws-service-name \ &amp;#34;elasticloadbalancing.amazonaws.com&amp;#34; Create the AWS Virtual Private Cloud (VPC) and Subnets For this scenario, we will be using a newly created VPC with both public and private subnets.</description></item><item><title>AWS ALB</title><link>https://mobb.ninja/docs/rosa/waf/alb/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/alb/</guid><description>Note: It is recommended that you use the Cloud Front based guide unless you absolutely must use an ALB based solution.
Here &amp;rsquo;s a good overview of AWS LB types and what they support
Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF</description></item><item><title>Examples of using a WAF in front of ROSA / OSD on AWS / OCP on AWS</title><link>https://mobb.ninja/docs/rosa/waf/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/</guid><description>Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF
Quick Introduction by Paul Czarkowski &amp;amp; Ryan Niksch on YouTube Solutions Cloud Front -&amp;gt; WAF -&amp;gt; CustomDomain -&amp;gt; $APP This is the preferred method and can also work with most third party WAF systems that act as a reverse proxy</description></item><item><title>This is a POC of ROSA with a AWS WAF service</title><link>https://mobb.ninja/docs/rosa/waf/readme-complex/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/readme-complex/</guid><description>This is a POC of ROSA with a AWS WAF service Non working (yet) instructions for using STS to manage the creds for ALB
See https://issues.redhat.com/browse/CTONET-858 for a similar request
Here &amp;rsquo;s a good overview of AWS LB types and what they support
Problem Statement Customer requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Customer does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF</description></item><item><title>Using CloudFront + WAF</title><link>https://mobb.ninja/docs/rosa/waf/cloud-front/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/cloud-front/</guid><description>Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF
Proposed Solution Add a CustomDomain resource to the cluster using a wildcard DNS and TLS certificate.
Set the Wildcard DNS CNAME&amp;rsquo;s to CloudFront and enable the CloudFront + WAF services to reverse proxy and inspect the traffic before sending it to the cluster.</description></item><item><title>Creating a Public/Private BYO VPC for ROSA</title><link>https://mobb.ninja/docs/rosa/byo-vpc/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/byo-vpc/</guid><description>This is example Terraform to create a single AZ VPC in which to deploy a single AZ ROSA cluster. This is intended to be used as a guide to get started quickly, not to be used in production.
Pre-Requisites Terraform Deploy Download this repo
git clone https://github.com/rh-mobb/documentation.git cd documentation/docs/rosa/byo-vpc Modify main.tf as needed, then run
terraform init terraform plan terraform apply Cleanup To destroy resources terraform destroy</description></item><item><title>Creating a ROSA cluster with Private Link enabled</title><link>https://mobb.ninja/docs/rosa/private-link/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/private-link/</guid><description>Prerequisites AWS CLI Rosa CLI v1.0.8 jq Create VPC and Subnets The following instructions use the AWS CLI to create the necessary networking to deploy a Private Link ROSA cluster into a Single AZ and are intended to be a guide. Ideally you would use an Automation tool like Ansible or Terraform to manage your VPCs.
When creating subnets, make sure that subnet(s) are created to an availability zone that has ROSA instances types available.</description></item><item><title>Federating System and User metrics to S3 in Red Hat OpenShift for AWS</title><link>https://mobb.ninja/docs/rosa/federated-metrics/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/federated-metrics/</guid><description>This guide walks through setting up federating Prometheus metrics to S3 storage.
ToDo - Add Authorization in front of Thanos APIs
Prerequisites A ROSA cluster deployed with STS aws CLI Set up environment Create environment variables
export CLUSTER_NAME=my-cluster export S3_BUCKET=my-thanos-bucket export REGION=us-east-2 export NAMESPACE=federated-metrics export SA=aws-prometheus-proxy export SCRATCH_DIR=/tmp/scratch export OIDC_PROVIDER=$(oc get authentication.config.openshift.io cluster -o json | jq -r .spec.serviceAccountIssuer| sed -e &amp;#34;s/^https:\/\///&amp;#34;) export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text) export AWS_PAGER=&amp;#34;&amp;#34; rm -rf $SCRATCH_DIR mkdir -p $SCRATCH_DIR Create namespace</description></item></channel></rss>