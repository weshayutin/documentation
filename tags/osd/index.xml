<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSD on Managed OpenShift Black Belt - Unofficial Documentation</title><link>https://mobb.ninja/tags/osd/</link><description>Recent content in OSD on Managed OpenShift Black Belt - Unofficial Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mobb.ninja/tags/osd/index.xml" rel="self" type="application/rss+xml"/><item><title>Assign Consistent Egress IP for External Traffic</title><link>https://mobb.ninja/docs/rosa/egress-ip/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/egress-ip/</guid><description>It may be desirable to assign a consistent IP address for traffic that leaves the cluster when configuring items such as security groups or other sorts of security controls which require an IP-based configuration. By default, Kubernetes via the OVN-Kubernetes CNI will assign random IP addresses from a pool which will make configuring security lockdowns unpredictable or unnecessarily open. This guide shows you how to configure a set of predictable IP addresses for egress cluster traffic to meet common security standards and guidance and other potential use cases.</description></item><item><title>Configure Azure AD as an OIDC identity provider for ROSA/OSD</title><link>https://mobb.ninja/docs/idp/azuread/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/idp/azuread/</guid><description>This guide demonstrates how to configure Azure AD as the cluster identity provider in Red Hat OpenShift Service on AWS (ROSA). This guide will walk through the creation of an Azure Active Directory (Azure AD) application and configure Red Hat OpenShift Service on AWS (ROSA) to authenticate using Azure AD.
This guide will walk through the following steps:
Register a new application in Azure AD for authentication. Configure the application registration in Azure AD to include optional and group claims in tokens.</description></item><item><title>OSD on Google Cloud</title><link>https://mobb.ninja/docs/gcp/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/gcp/</guid><description> Filestore Storage for OSD on GCP Creating OSD on GCP w/ Existing VPC</description></item><item><title>Configure ROSA/OSD to use custom TLS ciphers on the ingress controllers</title><link>https://mobb.ninja/docs/misc/tls-cipher-customization/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/tls-cipher-customization/</guid><description>This guide demonstrates how to properly patch the cluster ingress controllers, as well as ingress controllers created by the Custom Domain Operator. This functionality allows customers to modify the tlsSecurityProfile value on cluster ingress controllers. This guide will demonstrate how to apply a custom tlsSecurityProfile, a scoped service account (with the associated role and role binding), and a CronJob that the cipher changes are reapplied with 60 minutes (in the event that an ingress controller is recreated or modified).</description></item><item><title>Stop default router from serving custom domain routes</title><link>https://mobb.ninja/docs/misc/default-router-custom-domain/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/default-router-custom-domain/</guid><description>OSD and ROSA supports custom domain operator to serve application custom domain, which provisions openshift ingress controller and cloud load balancers. However, when a route with custom domain is created, both default router and custom domain router serve routes. This article describes how to use route labels to stop default router from serving custom domain routes.
Prerequisites Rosa or OSD Cluster Custom Domain Deployed Problem Demo Deploy A Custom Domain oc create secret tls example-tls --cert=[cert_file] --key=[key_file] cat &amp;lt;&amp;lt; EOF | oc apply -f - apiVersion: managed.</description></item><item><title>Creating a OSD in GCP with Existing VPCs</title><link>https://mobb.ninja/docs/gcp/osd_preexisting_vpc/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/gcp/osd_preexisting_vpc/</guid><description>Tip The official documentation for installing a OSD cluster in GCP can be found here .
For deploy an OSD cluster in GCP using existing Virtual Private Cloud (VPC) you need to implement some prerequisites that you must create before starting the OpenShift Dedicated installation though the OCM.
Prerequisites gcloud CLI jq NOTE: Also the GCloud Shell can be used, and have the gcloud cli among other tools preinstalled.</description></item><item><title>Create Filestore Storage for OSD in GCP</title><link>https://mobb.ninja/docs/gcp/filestore/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/gcp/filestore/</guid><description>By default, within OSD in GCP only the GCE-PD StorageClass is available in the cluster. With this StorageClass, only ReadWriteOnce mode is permitted, and the gcePersistentDisks can only be mounted by a single consumer in read-write mode .
Because of that, and for provide Storage with Shared Access (RWX) Access Mode to our OpenShift clusters a GCP Filestore could be used.
GCP Filestore is not managed neither supported by Red Hat or Red Hat SRE team.</description></item><item><title>Deploying 3scale API Management to ROSA and OSD</title><link>https://mobb.ninja/docs/redhat/3scale/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/redhat/3scale/</guid><description>This document will take you through deploying 3scale in any OSD or ROSA cluster. Review the official documentation here for more information or how to further customize or use 3scale.
Prerequisites An existing ROSA or OSD cluster Access to an AWS account with permissions to create S3 buckets, IAM users, and IAM policies A subscription for 3scale API Management A wildcard domain configured with a CNAME to your cluster&amp;rsquo;s ingress controller Prepare AWS Account Set environment variables (ensuring you update the variables appropriately!</description></item><item><title>Configuring IDP for ROSA, OSD and ARO</title><link>https://mobb.ninja/docs/idp/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/idp/</guid><description>Red Hat OpenShift on AWS (ROSA) and OpenShift Dedicated (OSD) provide a simple way for the cluster administrator to configure one or more identity providers for their cluster[s] via the OpenShift Cluster Manager (OCM) , while Azure Red Hat OpenShift relies on the internal cluster authentication operator .
The identity providers available for use are:
GitHub GitLab Google LDAP OpenID HTPasswd Configuring Specific Identity Providers ARO GitLab Azure AD Azure AD with Group Claims Azure AD via CLI Azure AD with Red Hat SSO ROSA/OSD GitLab Azure AD Azure AD with Group Claims (ROSA Only) Configuring Group Synchronization Using Group Sync Operator with Azure Active Directory and ROSA/OSD Using Group Sync Operator with Okta and ROSA/OSD</description></item><item><title>Installing the HashiCorp Vault Secret CSI Driver</title><link>https://mobb.ninja/docs/misc/secrets-store-csi/hashicorp-vault/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/secrets-store-csi/hashicorp-vault/</guid><description>The HashiCorp Vault Secret CSI Driver allows you to access secrets stored in HashiCorp Vault as Kubernetes Volumes.
Prerequisites An OpenShift Cluster (ROSA, ARO, OSD, and OCP 4.x all work) kubectl helm v3 Installing the Kubernetes Secret Store CSI Create an OpenShift Project to deploy the CSI into
oc new-project k8s-secrets-store-csi Set SecurityContextConstraints to allow the CSI driver to run (otherwise the DaemonSet will not be able to create Pods)</description></item><item><title>Installing the Kubernetes Secret Store CSI on OpenShift</title><link>https://mobb.ninja/docs/misc/secrets-store-csi/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/misc/secrets-store-csi/</guid><description>The Kubernetes Secret Store CSI is a storage driver that allows you to mount secrets from external secret management systems like HashiCorp Vault and AWS Secrets.
It comes in two parts, the Secret Store CSI, and a Secret provider driver. This document covers just the CSI itself.
Prerequisites An OpenShift Cluster (ROSA, ARO, OSD, and OCP 4.x all work) kubectl helm v3 Installing the Kubernetes Secret Store CSI Create an OpenShift Project to deploy the CSI into</description></item><item><title>AWS ALB</title><link>https://mobb.ninja/docs/rosa/waf/alb/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/alb/</guid><description>Note: It is recommended that you use the Cloud Front based guide unless you absolutely must use an ALB based solution.
Here &amp;rsquo;s a good overview of AWS LB types and what they support
Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF</description></item><item><title>Examples of using a WAF in front of ROSA / OSD on AWS / OCP on AWS</title><link>https://mobb.ninja/docs/rosa/waf/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/</guid><description>Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF
Quick Introduction by Paul Czarkowski &amp;amp; Ryan Niksch on YouTube Solutions Cloud Front -&amp;gt; WAF -&amp;gt; CustomDomain -&amp;gt; $APP This is the preferred method and can also work with most third party WAF systems that act as a reverse proxy</description></item></channel></rss>